schema {
  query: RootQueryType
  mutation: RootMutationType
}

type B2bConnection {
  """The company that initiated the connection"""
  company: Company

  """The company that is connected"""
  connectedCompany: Company

  """The date and time the connection was created"""
  createdAt: NaiveDateTime

  """The unique identifier of the B2B connection"""
  id: ID

  """The date and time the connection was started"""
  startedAt: NaiveDateTime

  """The type of the connection"""
  type: B2bConnectionType

  """The date and time the connection was last updated"""
  updatedAt: NaiveDateTime
}

type B2bConnectionRequest {
  """The company that initiated the request"""
  company: Company

  """The unique identifier of the request"""
  id: ID

  """The time the request was created"""
  insertedAt: NaiveDateTime

  """The company that was invited"""
  invitedCompany: Company

  """The time the request was responded to"""
  respondedAt: NaiveDateTime

  """The status of the request"""
  status: ConnectionStatus

  """The type of the connection"""
  type: B2bConnectionType

  """The time the request was last updated"""
  updatedAt: NaiveDateTime

  """The user who initiated the request (if any)"""
  user: User
}

"""The type of a B2B connection"""
enum B2bConnectionType {
  CLIENT
  OTHER
  PARTNER
  VENDOR
}

"""A connection between a company (business) and a user (individual)"""
type B2cConnection {
  """The company that initiated the connection"""
  company: Company

  """The user that accepted the connected"""
  connectedUser: User

  """The unique identifier of the connection"""
  id: ID

  """The time the connection was created"""
  insertedAt: NaiveDateTime

  """The time the connection was started at"""
  startedAt: NaiveDateTime

  """The type of the connection"""
  type: B2cConnectionType

  """The time the connection was last updated"""
  updatedAt: NaiveDateTime
}

type B2cConnectionRequest {
  """The company that initiated the request"""
  company: Company

  """The unique identifier of the request"""
  id: ID

  """The time the request was created"""
  insertedAt: NaiveDateTime

  """The user that was invited"""
  invitedUser: User

  """The time the request was responded to"""
  respondedAt: NaiveDateTime

  """The status of the request"""
  status: ConnectionStatus

  """The type of the connection"""
  type: B2cConnectionType

  """The time the request was last updated"""
  updatedAt: NaiveDateTime

  """The user who initiated the request (if any)"""
  user: User
}

"""The type of a B2C and C2B connection"""
enum B2cConnectionType {
  ADMIN
  CUSTOMER
  EMPLOYEE
  EXTERNAL_ADMIN
  OTHER
  OWNER
  PARTNER
}

"""A user's subscription to company notifications."""
type B2cEmailSubscription {
  """The company that the subscription belongs to"""
  company: Company

  """The registered email, where to send notifications to."""
  email: String!

  """Expiration date of subscription"""
  expirationDate: Date

  """The unique identifier of the subscription"""
  id: ID!

  """The time the request was created"""
  insertedAt: NaiveDateTime

  """End time for notificaiton sending"""
  notificationEndTime: Time

  """Start time for notification sending"""
  notificationStartTime: Time

  """Does the user share their information with the company"""
  shareInformationWithTheCompany: Boolean

  """Did the user stop all communication channels?"""
  stopAllCommunications: Boolean

  """The topics the user is subscribed to"""
  subscriptionTopics: [B2cSubscriptionTopic!]!

  """The timezone used for sending notifications"""
  timezone: String

  """The type of the subscription - always EMAIL in this case"""
  type: B2cSubscriptionType!

  """The time the request was last updated"""
  updatedAt: NaiveDateTime

  """The user who subscribed to the company"""
  user: User
}

"""A user's subscription to company notifications."""
type B2cSmsSubscription {
  """The company that the subscription belongs to"""
  company: Company

  """Expiration date of subscription"""
  expirationDate: Date

  """The unique identifier of the subscription"""
  id: ID!

  """The time the request was created"""
  insertedAt: NaiveDateTime

  """End time for notificaiton sending"""
  notificationEndTime: Time

  """Start time for notification sending"""
  notificationStartTime: Time

  """Does the user share their information with the company"""
  shareInformationWithTheCompany: Boolean

  """Did the user stop all communication channels?"""
  stopAllCommunications: Boolean

  """The topics the user is subscribed to"""
  subscriptionTopics: [B2cSubscriptionTopic!]!

  """The registered telephone_number, where to send notifications to."""
  telephoneNumber: String!

  """The timezone used for sending notifications"""
  timezone: String

  """The type of the subscription - always SMS in this case"""
  type: B2cSubscriptionType!

  """The time the request was last updated"""
  updatedAt: NaiveDateTime

  """The user who subscribed to the company"""
  user: User
}

"""A subscription record"""
union B2cSubscription = B2cEmailSubscription | B2cSmsSubscription | B2cVoiceSubscription

type B2cSubscriptionRequest {
  """The company that initiated the request"""
  company: Company

  """Email channel to be active?"""
  emailRequested: Boolean

  """The unique identifier of the request"""
  id: ID

  """The time the request was created"""
  insertedAt: NaiveDateTime

  """The user that was invited"""
  invitedUser: User

  """The time the request was responded to"""
  respondedAt: NaiveDateTime

  """Sms channel to be active?"""
  smsRequested: Boolean

  """The status of the request"""
  status: SubscriptionRequestStatus

  """The time the request was last updated"""
  updatedAt: NaiveDateTime

  """The user who initiated the request (if any)"""
  user: User

  """Voice channel to be active?"""
  voiceRequested: Boolean
}

"""The topic of a subscription"""
enum B2cSubscriptionTopic {
  CRITICAL
  MARKETING
  OTP
  SUPPORT_AND_BILLING
}

"""The type of a subscription"""
enum B2cSubscriptionType {
  EMAIL
  SMS
  VOICE
}

"""A user's subscription to company notifications."""
type B2cVoiceSubscription {
  """The company that the subscription belongs to"""
  company: Company

  """Expiration date of subscription"""
  expirationDate: Date

  """The unique identifier of the subscription"""
  id: ID!

  """The time the request was created"""
  insertedAt: NaiveDateTime

  """End time for notificaiton sending"""
  notificationEndTime: Time

  """Start time for notification sending"""
  notificationStartTime: Time

  """Does the user share their information with the company"""
  shareInformationWithTheCompany: Boolean

  """Did the user stop all communication channels?"""
  stopAllCommunications: Boolean

  """The topics the user is subscribed to"""
  subscriptionTopics: [B2cSubscriptionTopic!]!

  """The registered telephone_number, where to send notifications to."""
  telephoneNumber: String!

  """The timezone used for sending notifications"""
  timezone: String

  """The type of the subscription - always VOICE in this case"""
  type: B2cSubscriptionType!

  """The time the request was last updated"""
  updatedAt: NaiveDateTime

  """The user who subscribed to the company"""
  user: User
}

type C2bConnectionRequest {
  """The unique identifier of the request"""
  id: ID

  """The time the request was created"""
  insertedAt: NaiveDateTime

  """The company that received the request"""
  invitedCompany: Company

  """The time the request was responded to"""
  respondedAt: NaiveDateTime

  """The user that responded to the request"""
  respondedByUser: User

  """The status of the request"""
  status: ConnectionStatus

  """The type of the connection"""
  type: B2cConnectionType

  """The time the request was last updated"""
  updatedAt: NaiveDateTime

  """The user who initiated the request (if any)"""
  user: User
}

type Company {
  """The about us of the company"""
  aboutUs: String

  """The brand name of the company"""
  brandName: String

  """The unique identifier of the company"""
  id: String

  """The legal name of the company"""
  legalName: String

  """Additional metadata"""
  metadata: Json

  """The TnID profile name of the company"""
  profileName: String!

  """The tax id of the company"""
  taxId: String

  """The foundation year of the company"""
  yearFounded: Int
}

input CompanyAddressInput {
  city: String
  country: String
  state: String
  street: String
  zipCode: String
}

input CompanyInput {
  aboutUs: String
  addresses: [CompanyAddressInput]
  brandName: String
  legalName: String!
  taxId: String
  yearFounded: Int
}

enum ConnectionRequestResponse {
  ACCEPTED
  REJECTED
}

"""The status of a connection or a connection request"""
enum ConnectionStatus {
  ACCEPTED
  PENDING
  REJECTED
  REVOKED
}

"""
The `Date` scalar type represents a date. The Date appears in a JSON
response as an ISO8601 formatted string, without a time component.
"""
scalar Date

input InviteUserInput {
  """Email of the user you want to create"""
  email: String!

  """First name of the user you want to create"""
  firstName: String

  """Last name of the user you want to create"""
  lastName: String

  """Additional information"""
  metadata: Json

  """Send invitation email to user you want to create"""
  sendInviteEmail: Boolean = true

  """Telephone Number of the user you want to create"""
  telephoneNumber: String
}

"""
The `Json` scalar type represents arbitrary json string data, represented as UTF-8
character sequences. The Json type is most often used to represent a free-form
human-readable json string.
"""
scalar Json

type RootMutationType {
  createB2bConnectionRequest(
    """Type of the relationship you want to create"""
    connectionType: B2bConnectionType!

    """Id of the company you want to send connection request to"""
    invitedCompanyId: ID!
  ): B2bConnectionRequest
  createB2bInvite(
    """Information of the company you want to create"""
    company: CompanyInput!

    """Type of the relationship you want to create"""
    connectionType: B2bConnectionType!

    """Information of the representatives you want to create"""
    representatives: [InviteUserInput!]!
  ): B2bConnectionRequest
  createB2cConnectionRequest(
    """Type of the relationship you want to create"""
    connectionType: B2cConnectionType!

    """Id of the user you want to send connection request to"""
    invitedUserId: ID!
  ): B2cConnectionRequest
  createB2cInvite(
    """Type of the relationship you want to create"""
    connectionType: B2cConnectionType!

    """Information of the user you want to create"""
    user: InviteUserInput!
  ): B2cConnectionRequest
  createB2cSubscriptionRequest(
    """Id of the user you want to send subscription request to"""
    invitedUserId: ID!

    """Request email subscription"""
    requestEmailSubscription: Boolean = false

    """Request SMS subscription"""
    requestSmsSubscription: Boolean = false

    """Request voice call subscription"""
    requestVoiceSubscription: Boolean = false
  ): B2cSubscriptionRequest
  respondB2bConnectionRequest(
    """Id of the request you want to accept"""
    requestId: ID!

    """Response to the request - accepted or rejected"""
    response: ConnectionRequestResponse!
  ): B2bConnectionRequest
  respondC2bConnectionRequest(
    """Id of the request you want to accept"""
    requestId: ID!

    """Response to the request - accepted or rejected"""
    response: ConnectionRequestResponse!
  ): C2bConnectionRequest
  revokeB2bConnectionRequest(
    """Id of the request you want to revoke"""
    requestId: ID!
  ): B2bConnectionRequest
  revokeB2cConnectionRequest(
    """Id of the request you want to revoke"""
    requestId: ID!
  ): B2cConnectionRequest
  revokeB2cSubscriptionRequest(
    """Id of the request you want to revoke"""
    requestId: ID!
  ): B2cSubscriptionRequest
  updateCompany(
    """About us of the company"""
    aboutUs: String

    """Brand name of the company"""
    brandName: String

    """Legal name of the company"""
    legalName: String

    """Additional information"""
    metadata: Json

    """Profile name of the company"""
    profileName: String

    """Tax id of the company"""
    taxId: String

    """Year of foundation of the company"""
    yearFounded: Int
  ): Company
}

"""
The `Naive DateTime` scalar type represents a naive date and time without
timezone. The DateTime appears in a JSON response as an ISO8601 formatted
string.
"""
scalar NaiveDateTime

type OrganizationType {
  """Display name of the organization type"""
  displayName: String

  """The unique identifier of the organization type"""
  id: String
}

type PaginatedB2cSubscriptions {
  """The pagination info - containing info on how to paginate further"""
  paginationInfo: PaginationInfo!

  """A paginated result of B2C subscription records"""
  records: [B2cSubscription!]!
}

"""Pagination info"""
type PaginationInfo {
  """Limit on the number of results per query"""
  limit: Int

  """Cursor for the next batch of results, pass to the next query"""
  nextCursor: String
}

type RootQueryType {
  b2bConnections(
    """Filter by excluding the type of the connection"""
    excludedType: B2bConnectionType

    """Filter by the type of the connection"""
    includedType: B2bConnectionType

    """Limit number of results"""
    limit: Int
  ): [B2bConnection]
  b2cConnections(
    """Filter by excluding the type of the connection"""
    excludedType: B2cConnectionType

    """Filter by the type of the connection"""
    includedType: B2cConnectionType

    """Limit number of results"""
    limit: Int
  ): [B2cConnection]
  b2cSubscriptions(
    """Cursor to get the next batch of results (null if none)"""
    cursor: String

    """Filter by excluding the topic of the subscription"""
    excludedTopic: B2cSubscriptionTopic

    """Filter by the expiration date of the subscription"""
    expirationDateAfter: Date

    """Filter by the expiration date of the subscription"""
    expirationDateBefore: Date

    """Filter by the topic of the subscription"""
    includedTopic: B2cSubscriptionTopic

    """Limit number of results"""
    limit: Int

    """Filter by the type (channel) of the subscription"""
    types: [B2cSubscriptionType!]

    """Filter by the user of the subscription"""
    userId: ID
  ): PaginatedB2cSubscriptions
  companies(
    email: String
    limit: Int

    """Filter by legal name, brand name or profile name"""
    name: String
    taxId: String
    telephoneNumber: String
    webpage: String
  ): [Company]
  organizationTypes: [OrganizationType]
  pendingB2bConnectionRequests(
    """Filter by excluding the type of the connection request"""
    excludedType: B2bConnectionType

    """Filter by the type of the connection request"""
    includedType: B2bConnectionType

    """Filter by invited company id"""
    invitedCompanyId: ID

    """Limit number of results"""
    limit: Int
  ): [B2bConnectionRequest]
  pendingB2cConnectionRequests(
    """Filter by excluding the type of the connection request"""
    excludedType: B2cConnectionType

    """Filter by the type of the connection request"""
    includedType: B2cConnectionType

    """Filter by invited user id"""
    invitedUserId: ID

    """Limit number of results"""
    limit: Int
  ): [B2cConnectionRequest]
  pendingB2cSubscriptionRequests: [B2cSubscriptionRequest]
  pendingC2bConnectionRequests(
    """Filter by excluding the type of the connection request"""
    excludedType: B2cConnectionType

    """Filter by the type of the connection request"""
    includedType: B2cConnectionType

    """Limit number of results"""
    limit: Int

    """Filter by inviter user id"""
    userId: ID
  ): [C2bConnectionRequest]
  receivedB2bConnectionRequests(
    """Filter by excluding the type of the connection request"""
    excludedType: B2bConnectionType

    """Filter by the type of the connection request"""
    includedType: B2bConnectionType

    """Filter by inviting company id - the one that invited you"""
    invitingCompanyId: ID

    """Limit number of results"""
    limit: Int
  ): [B2bConnectionRequest]
  users(
    email: String
    limit: Int

    """Filter by username or full name"""
    name: String
    telephoneNumber: String
  ): [User]
  verticalTypes: [VerticalType]
}

"""The status of a subscription request"""
enum SubscriptionRequestStatus {
  ACCEPTED
  PENDING
  REJECTED
  REVOKED
}

"""
The `Time` scalar type represents a time. The Time appears in a JSON
response as an ISO8601 formatted string, without a date component.
"""
scalar Time

type User {
  """The about me of the user"""
  aboutMe: String

  """The birthdate of the user"""
  birthdate: Date

  """The first name of the user"""
  firstName: String

  """The unique identifier of the user"""
  id: String

  """The last name of the user"""
  lastName: String

  """Additional metadata"""
  metadata: Json

  """The middle name of the user"""
  middleName: String

  """The username of the user"""
  username: String!
}

type VerticalType {
  """The description of the vertical type"""
  description: String

  """The name of the vertical type"""
  displayName: String!

  """The unique identifier of the vertical type"""
  id: String
}
